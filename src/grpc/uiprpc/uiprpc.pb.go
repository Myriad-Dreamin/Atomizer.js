// Code generated by protoc-gen-go. DO NOT EDIT.
// source: uiprpc.proto

package uiprpc

import (
	context "context"
	fmt "fmt"
	uiprpc_base "github.com/HyperService-Consortium/go-ves/grpc/uiprpc-base"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UserRegisterRequest struct {
	Account              *uiprpc_base.Account `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	UserName             string               `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *UserRegisterRequest) Reset()         { *m = UserRegisterRequest{} }
func (m *UserRegisterRequest) String() string { return proto.CompactTextString(m) }
func (*UserRegisterRequest) ProtoMessage()    {}
func (*UserRegisterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_65695cb26327d0ea, []int{0}
}

func (m *UserRegisterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserRegisterRequest.Unmarshal(m, b)
}
func (m *UserRegisterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserRegisterRequest.Marshal(b, m, deterministic)
}
func (m *UserRegisterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserRegisterRequest.Merge(m, src)
}
func (m *UserRegisterRequest) XXX_Size() int {
	return xxx_messageInfo_UserRegisterRequest.Size(m)
}
func (m *UserRegisterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserRegisterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserRegisterRequest proto.InternalMessageInfo

func (m *UserRegisterRequest) GetAccount() *uiprpc_base.Account {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *UserRegisterRequest) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

type UserRegisterReply struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserRegisterReply) Reset()         { *m = UserRegisterReply{} }
func (m *UserRegisterReply) String() string { return proto.CompactTextString(m) }
func (*UserRegisterReply) ProtoMessage()    {}
func (*UserRegisterReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_65695cb26327d0ea, []int{1}
}

func (m *UserRegisterReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserRegisterReply.Unmarshal(m, b)
}
func (m *UserRegisterReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserRegisterReply.Marshal(b, m, deterministic)
}
func (m *UserRegisterReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserRegisterReply.Merge(m, src)
}
func (m *UserRegisterReply) XXX_Size() int {
	return xxx_messageInfo_UserRegisterReply.Size(m)
}
func (m *UserRegisterReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UserRegisterReply.DiscardUnknown(m)
}

var xxx_messageInfo_UserRegisterReply proto.InternalMessageInfo

func (m *UserRegisterReply) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type SessionStartRequest struct {
	Opintents            *uiprpc_base.OpIntents `protobuf:"bytes,1,opt,name=opintents,proto3" json:"opintents,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *SessionStartRequest) Reset()         { *m = SessionStartRequest{} }
func (m *SessionStartRequest) String() string { return proto.CompactTextString(m) }
func (*SessionStartRequest) ProtoMessage()    {}
func (*SessionStartRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_65695cb26327d0ea, []int{2}
}

func (m *SessionStartRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionStartRequest.Unmarshal(m, b)
}
func (m *SessionStartRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionStartRequest.Marshal(b, m, deterministic)
}
func (m *SessionStartRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionStartRequest.Merge(m, src)
}
func (m *SessionStartRequest) XXX_Size() int {
	return xxx_messageInfo_SessionStartRequest.Size(m)
}
func (m *SessionStartRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionStartRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SessionStartRequest proto.InternalMessageInfo

func (m *SessionStartRequest) GetOpintents() *uiprpc_base.OpIntents {
	if m != nil {
		return m.Opintents
	}
	return nil
}

type SessionStartReply struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	SessionId            []byte   `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionStartReply) Reset()         { *m = SessionStartReply{} }
func (m *SessionStartReply) String() string { return proto.CompactTextString(m) }
func (*SessionStartReply) ProtoMessage()    {}
func (*SessionStartReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_65695cb26327d0ea, []int{3}
}

func (m *SessionStartReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionStartReply.Unmarshal(m, b)
}
func (m *SessionStartReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionStartReply.Marshal(b, m, deterministic)
}
func (m *SessionStartReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionStartReply.Merge(m, src)
}
func (m *SessionStartReply) XXX_Size() int {
	return xxx_messageInfo_SessionStartReply.Size(m)
}
func (m *SessionStartReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionStartReply.DiscardUnknown(m)
}

var xxx_messageInfo_SessionStartReply proto.InternalMessageInfo

func (m *SessionStartReply) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *SessionStartReply) GetSessionId() []byte {
	if m != nil {
		return m.SessionId
	}
	return nil
}

type SessionAckForInitRequest struct {
	// isc_address
	SessionId            []byte                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	User                 *uiprpc_base.Account   `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	UserSignature        *uiprpc_base.Signature `protobuf:"bytes,3,opt,name=user_signature,json=userSignature,proto3" json:"user_signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *SessionAckForInitRequest) Reset()         { *m = SessionAckForInitRequest{} }
func (m *SessionAckForInitRequest) String() string { return proto.CompactTextString(m) }
func (*SessionAckForInitRequest) ProtoMessage()    {}
func (*SessionAckForInitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_65695cb26327d0ea, []int{4}
}

func (m *SessionAckForInitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionAckForInitRequest.Unmarshal(m, b)
}
func (m *SessionAckForInitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionAckForInitRequest.Marshal(b, m, deterministic)
}
func (m *SessionAckForInitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionAckForInitRequest.Merge(m, src)
}
func (m *SessionAckForInitRequest) XXX_Size() int {
	return xxx_messageInfo_SessionAckForInitRequest.Size(m)
}
func (m *SessionAckForInitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionAckForInitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SessionAckForInitRequest proto.InternalMessageInfo

func (m *SessionAckForInitRequest) GetSessionId() []byte {
	if m != nil {
		return m.SessionId
	}
	return nil
}

func (m *SessionAckForInitRequest) GetUser() *uiprpc_base.Account {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *SessionAckForInitRequest) GetUserSignature() *uiprpc_base.Signature {
	if m != nil {
		return m.UserSignature
	}
	return nil
}

type SessionAckForInitReply struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionAckForInitReply) Reset()         { *m = SessionAckForInitReply{} }
func (m *SessionAckForInitReply) String() string { return proto.CompactTextString(m) }
func (*SessionAckForInitReply) ProtoMessage()    {}
func (*SessionAckForInitReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_65695cb26327d0ea, []int{5}
}

func (m *SessionAckForInitReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionAckForInitReply.Unmarshal(m, b)
}
func (m *SessionAckForInitReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionAckForInitReply.Marshal(b, m, deterministic)
}
func (m *SessionAckForInitReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionAckForInitReply.Merge(m, src)
}
func (m *SessionAckForInitReply) XXX_Size() int {
	return xxx_messageInfo_SessionAckForInitReply.Size(m)
}
func (m *SessionAckForInitReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionAckForInitReply.DiscardUnknown(m)
}

var xxx_messageInfo_SessionAckForInitReply proto.InternalMessageInfo

func (m *SessionAckForInitReply) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type SessionRequireTransactRequest struct {
	// isc_address
	SessionId            []byte   `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionRequireTransactRequest) Reset()         { *m = SessionRequireTransactRequest{} }
func (m *SessionRequireTransactRequest) String() string { return proto.CompactTextString(m) }
func (*SessionRequireTransactRequest) ProtoMessage()    {}
func (*SessionRequireTransactRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_65695cb26327d0ea, []int{6}
}

func (m *SessionRequireTransactRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionRequireTransactRequest.Unmarshal(m, b)
}
func (m *SessionRequireTransactRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionRequireTransactRequest.Marshal(b, m, deterministic)
}
func (m *SessionRequireTransactRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionRequireTransactRequest.Merge(m, src)
}
func (m *SessionRequireTransactRequest) XXX_Size() int {
	return xxx_messageInfo_SessionRequireTransactRequest.Size(m)
}
func (m *SessionRequireTransactRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionRequireTransactRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SessionRequireTransactRequest proto.InternalMessageInfo

func (m *SessionRequireTransactRequest) GetSessionId() []byte {
	if m != nil {
		return m.SessionId
	}
	return nil
}

type SessionRequireTransactReply struct {
	Tx                   *uiprpc_base.Transaction `protobuf:"bytes,2,opt,name=tx,proto3" json:"tx,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *SessionRequireTransactReply) Reset()         { *m = SessionRequireTransactReply{} }
func (m *SessionRequireTransactReply) String() string { return proto.CompactTextString(m) }
func (*SessionRequireTransactReply) ProtoMessage()    {}
func (*SessionRequireTransactReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_65695cb26327d0ea, []int{7}
}

func (m *SessionRequireTransactReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionRequireTransactReply.Unmarshal(m, b)
}
func (m *SessionRequireTransactReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionRequireTransactReply.Marshal(b, m, deterministic)
}
func (m *SessionRequireTransactReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionRequireTransactReply.Merge(m, src)
}
func (m *SessionRequireTransactReply) XXX_Size() int {
	return xxx_messageInfo_SessionRequireTransactReply.Size(m)
}
func (m *SessionRequireTransactReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionRequireTransactReply.DiscardUnknown(m)
}

var xxx_messageInfo_SessionRequireTransactReply proto.InternalMessageInfo

func (m *SessionRequireTransactReply) GetTx() *uiprpc_base.Transaction {
	if m != nil {
		return m.Tx
	}
	return nil
}

type SessionRequireRawTransactRequest struct {
	// isc_address
	SessionId            []byte   `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionRequireRawTransactRequest) Reset()         { *m = SessionRequireRawTransactRequest{} }
func (m *SessionRequireRawTransactRequest) String() string { return proto.CompactTextString(m) }
func (*SessionRequireRawTransactRequest) ProtoMessage()    {}
func (*SessionRequireRawTransactRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_65695cb26327d0ea, []int{8}
}

func (m *SessionRequireRawTransactRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionRequireRawTransactRequest.Unmarshal(m, b)
}
func (m *SessionRequireRawTransactRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionRequireRawTransactRequest.Marshal(b, m, deterministic)
}
func (m *SessionRequireRawTransactRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionRequireRawTransactRequest.Merge(m, src)
}
func (m *SessionRequireRawTransactRequest) XXX_Size() int {
	return xxx_messageInfo_SessionRequireRawTransactRequest.Size(m)
}
func (m *SessionRequireRawTransactRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionRequireRawTransactRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SessionRequireRawTransactRequest proto.InternalMessageInfo

func (m *SessionRequireRawTransactRequest) GetSessionId() []byte {
	if m != nil {
		return m.SessionId
	}
	return nil
}

type SessionRequireRawTransactReply struct {
	RawTransaction       []byte               `protobuf:"bytes,1,opt,name=raw_transaction,json=rawTransaction,proto3" json:"raw_transaction,omitempty"`
	Tid                  uint64               `protobuf:"varint,2,opt,name=tid,proto3" json:"tid,omitempty"`
	Src                  *uiprpc_base.Account `protobuf:"bytes,3,opt,name=src,proto3" json:"src,omitempty"`
	Dst                  *uiprpc_base.Account `protobuf:"bytes,4,opt,name=dst,proto3" json:"dst,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SessionRequireRawTransactReply) Reset()         { *m = SessionRequireRawTransactReply{} }
func (m *SessionRequireRawTransactReply) String() string { return proto.CompactTextString(m) }
func (*SessionRequireRawTransactReply) ProtoMessage()    {}
func (*SessionRequireRawTransactReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_65695cb26327d0ea, []int{9}
}

func (m *SessionRequireRawTransactReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionRequireRawTransactReply.Unmarshal(m, b)
}
func (m *SessionRequireRawTransactReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionRequireRawTransactReply.Marshal(b, m, deterministic)
}
func (m *SessionRequireRawTransactReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionRequireRawTransactReply.Merge(m, src)
}
func (m *SessionRequireRawTransactReply) XXX_Size() int {
	return xxx_messageInfo_SessionRequireRawTransactReply.Size(m)
}
func (m *SessionRequireRawTransactReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionRequireRawTransactReply.DiscardUnknown(m)
}

var xxx_messageInfo_SessionRequireRawTransactReply proto.InternalMessageInfo

func (m *SessionRequireRawTransactReply) GetRawTransaction() []byte {
	if m != nil {
		return m.RawTransaction
	}
	return nil
}

func (m *SessionRequireRawTransactReply) GetTid() uint64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

func (m *SessionRequireRawTransactReply) GetSrc() *uiprpc_base.Account {
	if m != nil {
		return m.Src
	}
	return nil
}

func (m *SessionRequireRawTransactReply) GetDst() *uiprpc_base.Account {
	if m != nil {
		return m.Dst
	}
	return nil
}

type AttestationReceiveRequest struct {
	// isc_address
	SessionId            []byte                   `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Atte                 *uiprpc_base.Attestation `protobuf:"bytes,2,opt,name=atte,proto3" json:"atte,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *AttestationReceiveRequest) Reset()         { *m = AttestationReceiveRequest{} }
func (m *AttestationReceiveRequest) String() string { return proto.CompactTextString(m) }
func (*AttestationReceiveRequest) ProtoMessage()    {}
func (*AttestationReceiveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_65695cb26327d0ea, []int{10}
}

func (m *AttestationReceiveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttestationReceiveRequest.Unmarshal(m, b)
}
func (m *AttestationReceiveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttestationReceiveRequest.Marshal(b, m, deterministic)
}
func (m *AttestationReceiveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttestationReceiveRequest.Merge(m, src)
}
func (m *AttestationReceiveRequest) XXX_Size() int {
	return xxx_messageInfo_AttestationReceiveRequest.Size(m)
}
func (m *AttestationReceiveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AttestationReceiveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AttestationReceiveRequest proto.InternalMessageInfo

func (m *AttestationReceiveRequest) GetSessionId() []byte {
	if m != nil {
		return m.SessionId
	}
	return nil
}

func (m *AttestationReceiveRequest) GetAtte() *uiprpc_base.Attestation {
	if m != nil {
		return m.Atte
	}
	return nil
}

type AttestationReceiveReply struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AttestationReceiveReply) Reset()         { *m = AttestationReceiveReply{} }
func (m *AttestationReceiveReply) String() string { return proto.CompactTextString(m) }
func (*AttestationReceiveReply) ProtoMessage()    {}
func (*AttestationReceiveReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_65695cb26327d0ea, []int{11}
}

func (m *AttestationReceiveReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttestationReceiveReply.Unmarshal(m, b)
}
func (m *AttestationReceiveReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttestationReceiveReply.Marshal(b, m, deterministic)
}
func (m *AttestationReceiveReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttestationReceiveReply.Merge(m, src)
}
func (m *AttestationReceiveReply) XXX_Size() int {
	return xxx_messageInfo_AttestationReceiveReply.Size(m)
}
func (m *AttestationReceiveReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AttestationReceiveReply.DiscardUnknown(m)
}

var xxx_messageInfo_AttestationReceiveReply proto.InternalMessageInfo

func (m *AttestationReceiveReply) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type MerkleProofReceiveRequest struct {
	SessionId            []byte                   `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	ChainId              uint64                   `protobuf:"varint,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Merkleproof          *uiprpc_base.MerkleProof `protobuf:"bytes,3,opt,name=merkleproof,proto3" json:"merkleproof,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *MerkleProofReceiveRequest) Reset()         { *m = MerkleProofReceiveRequest{} }
func (m *MerkleProofReceiveRequest) String() string { return proto.CompactTextString(m) }
func (*MerkleProofReceiveRequest) ProtoMessage()    {}
func (*MerkleProofReceiveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_65695cb26327d0ea, []int{12}
}

func (m *MerkleProofReceiveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerkleProofReceiveRequest.Unmarshal(m, b)
}
func (m *MerkleProofReceiveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerkleProofReceiveRequest.Marshal(b, m, deterministic)
}
func (m *MerkleProofReceiveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerkleProofReceiveRequest.Merge(m, src)
}
func (m *MerkleProofReceiveRequest) XXX_Size() int {
	return xxx_messageInfo_MerkleProofReceiveRequest.Size(m)
}
func (m *MerkleProofReceiveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MerkleProofReceiveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MerkleProofReceiveRequest proto.InternalMessageInfo

func (m *MerkleProofReceiveRequest) GetSessionId() []byte {
	if m != nil {
		return m.SessionId
	}
	return nil
}

func (m *MerkleProofReceiveRequest) GetChainId() uint64 {
	if m != nil {
		return m.ChainId
	}
	return 0
}

func (m *MerkleProofReceiveRequest) GetMerkleproof() *uiprpc_base.MerkleProof {
	if m != nil {
		return m.Merkleproof
	}
	return nil
}

type MerkleProofReceiveReply struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MerkleProofReceiveReply) Reset()         { *m = MerkleProofReceiveReply{} }
func (m *MerkleProofReceiveReply) String() string { return proto.CompactTextString(m) }
func (*MerkleProofReceiveReply) ProtoMessage()    {}
func (*MerkleProofReceiveReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_65695cb26327d0ea, []int{13}
}

func (m *MerkleProofReceiveReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerkleProofReceiveReply.Unmarshal(m, b)
}
func (m *MerkleProofReceiveReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerkleProofReceiveReply.Marshal(b, m, deterministic)
}
func (m *MerkleProofReceiveReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerkleProofReceiveReply.Merge(m, src)
}
func (m *MerkleProofReceiveReply) XXX_Size() int {
	return xxx_messageInfo_MerkleProofReceiveReply.Size(m)
}
func (m *MerkleProofReceiveReply) XXX_DiscardUnknown() {
	xxx_messageInfo_MerkleProofReceiveReply.DiscardUnknown(m)
}

var xxx_messageInfo_MerkleProofReceiveReply proto.InternalMessageInfo

func (m *MerkleProofReceiveReply) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type ShortenMerkleProofReceiveRequest struct {
	// isc_address
	SessionId            []byte                          `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	ChainId              uint64                          `protobuf:"varint,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Merkleproof          *uiprpc_base.ShortenMerkleProof `protobuf:"bytes,3,opt,name=merkleproof,proto3" json:"merkleproof,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *ShortenMerkleProofReceiveRequest) Reset()         { *m = ShortenMerkleProofReceiveRequest{} }
func (m *ShortenMerkleProofReceiveRequest) String() string { return proto.CompactTextString(m) }
func (*ShortenMerkleProofReceiveRequest) ProtoMessage()    {}
func (*ShortenMerkleProofReceiveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_65695cb26327d0ea, []int{14}
}

func (m *ShortenMerkleProofReceiveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShortenMerkleProofReceiveRequest.Unmarshal(m, b)
}
func (m *ShortenMerkleProofReceiveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShortenMerkleProofReceiveRequest.Marshal(b, m, deterministic)
}
func (m *ShortenMerkleProofReceiveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShortenMerkleProofReceiveRequest.Merge(m, src)
}
func (m *ShortenMerkleProofReceiveRequest) XXX_Size() int {
	return xxx_messageInfo_ShortenMerkleProofReceiveRequest.Size(m)
}
func (m *ShortenMerkleProofReceiveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ShortenMerkleProofReceiveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ShortenMerkleProofReceiveRequest proto.InternalMessageInfo

func (m *ShortenMerkleProofReceiveRequest) GetSessionId() []byte {
	if m != nil {
		return m.SessionId
	}
	return nil
}

func (m *ShortenMerkleProofReceiveRequest) GetChainId() uint64 {
	if m != nil {
		return m.ChainId
	}
	return 0
}

func (m *ShortenMerkleProofReceiveRequest) GetMerkleproof() *uiprpc_base.ShortenMerkleProof {
	if m != nil {
		return m.Merkleproof
	}
	return nil
}

type ShortenMerkleProofReceiveReply struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShortenMerkleProofReceiveReply) Reset()         { *m = ShortenMerkleProofReceiveReply{} }
func (m *ShortenMerkleProofReceiveReply) String() string { return proto.CompactTextString(m) }
func (*ShortenMerkleProofReceiveReply) ProtoMessage()    {}
func (*ShortenMerkleProofReceiveReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_65695cb26327d0ea, []int{15}
}

func (m *ShortenMerkleProofReceiveReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShortenMerkleProofReceiveReply.Unmarshal(m, b)
}
func (m *ShortenMerkleProofReceiveReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShortenMerkleProofReceiveReply.Marshal(b, m, deterministic)
}
func (m *ShortenMerkleProofReceiveReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShortenMerkleProofReceiveReply.Merge(m, src)
}
func (m *ShortenMerkleProofReceiveReply) XXX_Size() int {
	return xxx_messageInfo_ShortenMerkleProofReceiveReply.Size(m)
}
func (m *ShortenMerkleProofReceiveReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ShortenMerkleProofReceiveReply.DiscardUnknown(m)
}

var xxx_messageInfo_ShortenMerkleProofReceiveReply proto.InternalMessageInfo

func (m *ShortenMerkleProofReceiveReply) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type InternalRequestComingRequest struct {
	SessionId            []byte                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Host                 []byte                 `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Accounts             []*uiprpc_base.Account `protobuf:"bytes,3,rep,name=accounts,proto3" json:"accounts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *InternalRequestComingRequest) Reset()         { *m = InternalRequestComingRequest{} }
func (m *InternalRequestComingRequest) String() string { return proto.CompactTextString(m) }
func (*InternalRequestComingRequest) ProtoMessage()    {}
func (*InternalRequestComingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_65695cb26327d0ea, []int{16}
}

func (m *InternalRequestComingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InternalRequestComingRequest.Unmarshal(m, b)
}
func (m *InternalRequestComingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InternalRequestComingRequest.Marshal(b, m, deterministic)
}
func (m *InternalRequestComingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InternalRequestComingRequest.Merge(m, src)
}
func (m *InternalRequestComingRequest) XXX_Size() int {
	return xxx_messageInfo_InternalRequestComingRequest.Size(m)
}
func (m *InternalRequestComingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InternalRequestComingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InternalRequestComingRequest proto.InternalMessageInfo

func (m *InternalRequestComingRequest) GetSessionId() []byte {
	if m != nil {
		return m.SessionId
	}
	return nil
}

func (m *InternalRequestComingRequest) GetHost() []byte {
	if m != nil {
		return m.Host
	}
	return nil
}

func (m *InternalRequestComingRequest) GetAccounts() []*uiprpc_base.Account {
	if m != nil {
		return m.Accounts
	}
	return nil
}

type InternalRequestComingReply struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InternalRequestComingReply) Reset()         { *m = InternalRequestComingReply{} }
func (m *InternalRequestComingReply) String() string { return proto.CompactTextString(m) }
func (*InternalRequestComingReply) ProtoMessage()    {}
func (*InternalRequestComingReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_65695cb26327d0ea, []int{17}
}

func (m *InternalRequestComingReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InternalRequestComingReply.Unmarshal(m, b)
}
func (m *InternalRequestComingReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InternalRequestComingReply.Marshal(b, m, deterministic)
}
func (m *InternalRequestComingReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InternalRequestComingReply.Merge(m, src)
}
func (m *InternalRequestComingReply) XXX_Size() int {
	return xxx_messageInfo_InternalRequestComingReply.Size(m)
}
func (m *InternalRequestComingReply) XXX_DiscardUnknown() {
	xxx_messageInfo_InternalRequestComingReply.DiscardUnknown(m)
}

var xxx_messageInfo_InternalRequestComingReply proto.InternalMessageInfo

func (m *InternalRequestComingReply) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type InternalCloseSessionRequest struct {
	// isc_address
	SessionId            []byte                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	NsbHost              []byte                 `protobuf:"bytes,2,opt,name=nsb_host,json=nsbHost,proto3" json:"nsb_host,omitempty"`
	GrpcHost             []byte                 `protobuf:"bytes,3,opt,name=grpc_host,json=grpcHost,proto3" json:"grpc_host,omitempty"`
	Accounts             []*uiprpc_base.Account `protobuf:"bytes,4,rep,name=accounts,proto3" json:"accounts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *InternalCloseSessionRequest) Reset()         { *m = InternalCloseSessionRequest{} }
func (m *InternalCloseSessionRequest) String() string { return proto.CompactTextString(m) }
func (*InternalCloseSessionRequest) ProtoMessage()    {}
func (*InternalCloseSessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_65695cb26327d0ea, []int{18}
}

func (m *InternalCloseSessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InternalCloseSessionRequest.Unmarshal(m, b)
}
func (m *InternalCloseSessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InternalCloseSessionRequest.Marshal(b, m, deterministic)
}
func (m *InternalCloseSessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InternalCloseSessionRequest.Merge(m, src)
}
func (m *InternalCloseSessionRequest) XXX_Size() int {
	return xxx_messageInfo_InternalCloseSessionRequest.Size(m)
}
func (m *InternalCloseSessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InternalCloseSessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InternalCloseSessionRequest proto.InternalMessageInfo

func (m *InternalCloseSessionRequest) GetSessionId() []byte {
	if m != nil {
		return m.SessionId
	}
	return nil
}

func (m *InternalCloseSessionRequest) GetNsbHost() []byte {
	if m != nil {
		return m.NsbHost
	}
	return nil
}

func (m *InternalCloseSessionRequest) GetGrpcHost() []byte {
	if m != nil {
		return m.GrpcHost
	}
	return nil
}

func (m *InternalCloseSessionRequest) GetAccounts() []*uiprpc_base.Account {
	if m != nil {
		return m.Accounts
	}
	return nil
}

type InternalCloseSessionReply struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InternalCloseSessionReply) Reset()         { *m = InternalCloseSessionReply{} }
func (m *InternalCloseSessionReply) String() string { return proto.CompactTextString(m) }
func (*InternalCloseSessionReply) ProtoMessage()    {}
func (*InternalCloseSessionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_65695cb26327d0ea, []int{19}
}

func (m *InternalCloseSessionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InternalCloseSessionReply.Unmarshal(m, b)
}
func (m *InternalCloseSessionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InternalCloseSessionReply.Marshal(b, m, deterministic)
}
func (m *InternalCloseSessionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InternalCloseSessionReply.Merge(m, src)
}
func (m *InternalCloseSessionReply) XXX_Size() int {
	return xxx_messageInfo_InternalCloseSessionReply.Size(m)
}
func (m *InternalCloseSessionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_InternalCloseSessionReply.DiscardUnknown(m)
}

var xxx_messageInfo_InternalCloseSessionReply proto.InternalMessageInfo

func (m *InternalCloseSessionReply) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func init() {
	proto.RegisterType((*UserRegisterRequest)(nil), "uiprpc.UserRegisterRequest")
	proto.RegisterType((*UserRegisterReply)(nil), "uiprpc.UserRegisterReply")
	proto.RegisterType((*SessionStartRequest)(nil), "uiprpc.SessionStartRequest")
	proto.RegisterType((*SessionStartReply)(nil), "uiprpc.SessionStartReply")
	proto.RegisterType((*SessionAckForInitRequest)(nil), "uiprpc.SessionAckForInitRequest")
	proto.RegisterType((*SessionAckForInitReply)(nil), "uiprpc.SessionAckForInitReply")
	proto.RegisterType((*SessionRequireTransactRequest)(nil), "uiprpc.SessionRequireTransactRequest")
	proto.RegisterType((*SessionRequireTransactReply)(nil), "uiprpc.SessionRequireTransactReply")
	proto.RegisterType((*SessionRequireRawTransactRequest)(nil), "uiprpc.SessionRequireRawTransactRequest")
	proto.RegisterType((*SessionRequireRawTransactReply)(nil), "uiprpc.SessionRequireRawTransactReply")
	proto.RegisterType((*AttestationReceiveRequest)(nil), "uiprpc.AttestationReceiveRequest")
	proto.RegisterType((*AttestationReceiveReply)(nil), "uiprpc.AttestationReceiveReply")
	proto.RegisterType((*MerkleProofReceiveRequest)(nil), "uiprpc.MerkleProofReceiveRequest")
	proto.RegisterType((*MerkleProofReceiveReply)(nil), "uiprpc.MerkleProofReceiveReply")
	proto.RegisterType((*ShortenMerkleProofReceiveRequest)(nil), "uiprpc.ShortenMerkleProofReceiveRequest")
	proto.RegisterType((*ShortenMerkleProofReceiveReply)(nil), "uiprpc.ShortenMerkleProofReceiveReply")
	proto.RegisterType((*InternalRequestComingRequest)(nil), "uiprpc.InternalRequestComingRequest")
	proto.RegisterType((*InternalRequestComingReply)(nil), "uiprpc.InternalRequestComingReply")
	proto.RegisterType((*InternalCloseSessionRequest)(nil), "uiprpc.InternalCloseSessionRequest")
	proto.RegisterType((*InternalCloseSessionReply)(nil), "uiprpc.InternalCloseSessionReply")
}

func init() { proto.RegisterFile("uiprpc.proto", fileDescriptor_65695cb26327d0ea) }

var fileDescriptor_65695cb26327d0ea = []byte{
	// 897 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x57, 0x5d, 0x8f, 0xdb, 0x44,
	0x14, 0x95, 0x93, 0xa8, 0x9b, 0xdc, 0x5d, 0x16, 0x76, 0x5a, 0x8a, 0xe3, 0xd0, 0x6d, 0xea, 0x85,
	0x12, 0xc4, 0x36, 0x5b, 0x2d, 0x3c, 0x21, 0x81, 0x94, 0x2e, 0x2c, 0x8d, 0x50, 0x01, 0x39, 0x14,
	0x10, 0x0f, 0x44, 0x13, 0x7b, 0x36, 0xb1, 0x12, 0xcf, 0x98, 0x99, 0x49, 0xdb, 0x7d, 0x86, 0x3f,
	0xc0, 0x2f, 0x40, 0xe2, 0x81, 0x17, 0xfe, 0x00, 0x3f, 0x0f, 0x8d, 0x3f, 0x62, 0x3b, 0x19, 0x7b,
	0x53, 0x29, 0x3c, 0x6d, 0xec, 0x39, 0xf7, 0xdc, 0x73, 0xae, 0xed, 0x73, 0xb5, 0x70, 0xb0, 0xf4,
	0x43, 0x1e, 0xba, 0xfd, 0x90, 0x33, 0xc9, 0xd0, 0xad, 0xf8, 0xca, 0x82, 0x09, 0x16, 0x24, 0xbe,
	0x67, 0x4f, 0xe0, 0xf6, 0x73, 0x41, 0xb8, 0x43, 0xa6, 0xbe, 0x90, 0xea, 0xef, 0xaf, 0x4b, 0x22,
	0x24, 0xea, 0xc3, 0x1e, 0x76, 0x5d, 0xb6, 0xa4, 0xd2, 0x34, 0xba, 0x46, 0x6f, 0xff, 0xfc, 0x4e,
	0x3f, 0xa1, 0x8a, 0x6a, 0x07, 0xf1, 0x99, 0x93, 0x82, 0x50, 0x07, 0x5a, 0x4b, 0x41, 0xf8, 0x98,
	0xe2, 0x80, 0x98, 0xb5, 0xae, 0xd1, 0x6b, 0x39, 0x4d, 0x75, 0xe3, 0x1b, 0x1c, 0x10, 0xfb, 0x04,
	0x8e, 0x8a, 0x3d, 0xc2, 0xc5, 0x35, 0x3a, 0x84, 0x1a, 0x9b, 0x47, 0xe4, 0x4d, 0xa7, 0xc6, 0xe6,
	0xf6, 0xd7, 0x70, 0x7b, 0x44, 0x84, 0xf0, 0x19, 0x1d, 0x49, 0xcc, 0x65, 0x2a, 0xe4, 0x13, 0x68,
	0xb1, 0xd0, 0xa7, 0x92, 0x50, 0x29, 0x12, 0x29, 0x77, 0x0b, 0x52, 0xbe, 0x0d, 0x87, 0xf1, 0xa9,
	0x93, 0x01, 0xed, 0x27, 0x70, 0x54, 0x24, 0xd3, 0x74, 0x44, 0xf7, 0x00, 0x44, 0x0c, 0x1a, 0xfb,
	0x5e, 0x24, 0xfa, 0xc0, 0x69, 0x25, 0x77, 0x86, 0x9e, 0xfd, 0x97, 0x01, 0x66, 0x42, 0x32, 0x70,
	0xe7, 0x97, 0x8c, 0x0f, 0xa9, 0xbf, 0x92, 0x55, 0xac, 0x35, 0xd6, 0x6a, 0x51, 0x0f, 0x1a, 0xca,
	0x7d, 0x44, 0x5a, 0x36, 0xbb, 0x08, 0x81, 0x3e, 0x83, 0xc3, 0x68, 0x70, 0xc2, 0x9f, 0x52, 0x2c,
	0x97, 0x9c, 0x98, 0x75, 0x8d, 0xc9, 0x51, 0x7a, 0xea, 0xbc, 0xa1, 0xd0, 0xab, 0x4b, 0xbb, 0x07,
	0x77, 0x35, 0x1a, 0x75, 0xf3, 0xfd, 0x1c, 0xee, 0x25, 0x48, 0xe5, 0xc1, 0xe7, 0xe4, 0x7b, 0x8e,
	0xa9, 0xc0, 0xee, 0x96, 0x96, 0xec, 0xaf, 0xa0, 0x53, 0x56, 0xaf, 0xda, 0xf5, 0xa0, 0x26, 0x5f,
	0x25, 0x7e, 0xcd, 0x82, 0xf6, 0x14, 0xa7, 0x2a, 0x6b, 0xf2, 0x95, 0x3d, 0x80, 0x6e, 0x91, 0xc8,
	0xc1, 0x2f, 0x5f, 0x53, 0xcb, 0x3f, 0x06, 0x1c, 0x57, 0x70, 0x28, 0x3d, 0x1f, 0xc0, 0x9b, 0x1c,
	0xbf, 0x1c, 0xcb, 0xac, 0x79, 0x42, 0x73, 0xc8, 0x33, 0xa8, 0xcf, 0x28, 0x7a, 0x0b, 0xea, 0x32,
	0x79, 0xfc, 0x0d, 0x47, 0xfd, 0x44, 0x0f, 0xa1, 0x2e, 0xb8, 0x9b, 0x3c, 0x07, 0xfd, 0xb3, 0x53,
	0x00, 0x85, 0xf3, 0x84, 0x34, 0x1b, 0x55, 0x38, 0x4f, 0x48, 0x7b, 0x06, 0xed, 0x81, 0x94, 0x44,
	0x48, 0x1c, 0xcd, 0x80, 0xb8, 0xc4, 0x7f, 0x41, 0xb6, 0x7c, 0x91, 0x4e, 0xa1, 0x81, 0xa5, 0x24,
	0xda, 0xc1, 0xe6, 0x49, 0x23, 0x94, 0xfd, 0x21, 0xbc, 0xa3, 0xeb, 0xa4, 0x7b, 0x1d, 0xfe, 0x30,
	0xa0, 0xfd, 0x8c, 0xf0, 0xf9, 0x82, 0x7c, 0xc7, 0x19, 0xbb, 0x7a, 0x3d, 0x55, 0x6d, 0x68, 0xba,
	0x33, 0xec, 0xaf, 0xbe, 0x9b, 0x86, 0xb3, 0x17, 0x5d, 0x0f, 0x3d, 0xf4, 0x29, 0xec, 0x07, 0x11,
	0x6d, 0xa8, 0x68, 0x93, 0x21, 0x16, 0x75, 0xe7, 0xdb, 0xe6, 0xc1, 0x4a, 0xbe, 0x4e, 0x92, 0x4e,
	0xfe, 0x9f, 0x06, 0x74, 0x47, 0x33, 0xc6, 0x25, 0xa1, 0xff, 0x87, 0x8b, 0x81, 0xce, 0xc5, 0xfd,
	0xe2, 0x27, 0xb9, 0xd9, 0xbd, 0x60, 0xe6, 0x31, 0x1c, 0x57, 0x08, 0xd4, 0x79, 0xfa, 0xcd, 0x80,
	0x77, 0x55, 0x96, 0x71, 0x8a, 0x17, 0x89, 0x85, 0x0b, 0x16, 0xf8, 0x74, 0xba, 0xa5, 0x1f, 0x04,
	0x8d, 0x19, 0x13, 0x32, 0x49, 0xb2, 0xe8, 0x37, 0x7a, 0x0c, 0xcd, 0x24, 0xa2, 0x85, 0x59, 0xef,
	0xd6, 0x4b, 0x5f, 0xd4, 0x15, 0xca, 0x3e, 0x05, 0xab, 0x44, 0x84, 0x4e, 0xf3, 0xdf, 0x06, 0x74,
	0x52, 0xf8, 0xc5, 0x82, 0x09, 0x92, 0xfb, 0x2c, 0xb7, 0x7b, 0x04, 0x54, 0x4c, 0xc6, 0x39, 0xd9,
	0x7b, 0x54, 0x4c, 0x9e, 0x2a, 0xe5, 0x1d, 0x68, 0x4d, 0x79, 0xe8, 0xc6, 0x67, 0xf5, 0xe8, 0xac,
	0xa9, 0x6e, 0x3c, 0x5d, 0xb7, 0xd5, 0xd8, 0xca, 0xd6, 0x47, 0xd0, 0xd6, 0xeb, 0xd4, 0xb8, 0x3a,
	0xff, 0xbd, 0x09, 0xf5, 0x1f, 0xbe, 0x1c, 0xa1, 0x4b, 0x38, 0xc8, 0x2f, 0x2e, 0xd4, 0x49, 0x9b,
	0x68, 0x56, 0xa6, 0xd5, 0xd6, 0x1f, 0x2a, 0xfe, 0x4b, 0x38, 0xc8, 0xaf, 0xa3, 0x8c, 0x47, 0xb3,
	0xf1, 0x32, 0x9e, 0xcd, 0x0d, 0xf6, 0x7c, 0xb5, 0xd6, 0xb2, 0xb4, 0x47, 0xdd, 0x35, 0xfc, 0xc6,
	0xb2, 0xb2, 0x8e, 0x2b, 0x10, 0x8a, 0xd6, 0x5b, 0x2d, 0x91, 0xb5, 0x68, 0x47, 0xef, 0xaf, 0x55,
	0xea, 0x57, 0x87, 0x75, 0x72, 0x13, 0x4c, 0x75, 0x09, 0xa0, 0x5d, 0x9a, 0xd9, 0xa8, 0xa7, 0x67,
	0xd8, 0x5c, 0x0d, 0xd6, 0xc3, 0x2d, 0x90, 0xaa, 0xdd, 0x4f, 0x80, 0x36, 0xb3, 0x10, 0x3d, 0x48,
	0xab, 0x4b, 0x13, 0xd9, 0xba, 0x5f, 0x05, 0x49, 0x98, 0x37, 0x3f, 0xe9, 0x8c, 0xb9, 0x34, 0x8f,
	0x32, 0xe6, 0xb2, 0x44, 0x50, 0x23, 0x9a, 0x71, 0xa6, 0xcd, 0x8c, 0xdc, 0x88, 0x6e, 0xc8, 0xbd,
	0xdc, 0x88, 0xaa, 0x03, 0xe8, 0x47, 0x38, 0x1a, 0xd2, 0x2b, 0xc6, 0x83, 0x9c, 0xd3, 0x9d, 0x4c,
	0x68, 0x45, 0x9c, 0xeb, 0xbc, 0x93, 0x01, 0x2d, 0xc0, 0x8c, 0x89, 0x37, 0x9d, 0xed, 0x7e, 0x3e,
	0xe7, 0xff, 0xd6, 0x60, 0xff, 0x82, 0xa8, 0xd4, 0x20, 0x9e, 0x8a, 0x03, 0x0c, 0x6f, 0x6b, 0xa3,
	0x11, 0xbd, 0x97, 0x12, 0x56, 0xc5, 0xb7, 0x65, 0xdf, 0x80, 0x52, 0x06, 0xaf, 0xb2, 0xf4, 0xcd,
	0x0d, 0x77, 0x44, 0xa8, 0xb7, 0xdb, 0x3e, 0xbf, 0xc0, 0x1d, 0x5d, 0x1c, 0xa2, 0x93, 0xf5, 0x5a,
	0x4d, 0xa8, 0x5b, 0x0f, 0xaa, 0x41, 0xe1, 0xe2, 0xfa, 0x49, 0xff, 0xe7, 0xd3, 0xa9, 0x2f, 0x67,
	0xcb, 0x49, 0xdf, 0x65, 0xc1, 0xd9, 0xb3, 0x6b, 0xee, 0x63, 0xef, 0xd1, 0x17, 0x9c, 0xe0, 0xc0,
	0xa7, 0x67, 0x53, 0xf6, 0xe8, 0x05, 0x11, 0x67, 0x2a, 0xcd, 0xcf, 0x62, 0xa6, 0xc9, 0xad, 0xe8,
	0xbf, 0x91, 0x8f, 0xff, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x37, 0xec, 0xe6, 0xc2, 0xb1, 0x0c, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// VESClient is the client API for VES service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VESClient interface {
	UserRegister(ctx context.Context, in *UserRegisterRequest, opts ...grpc.CallOption) (*UserRegisterReply, error)
	SessionStart(ctx context.Context, in *SessionStartRequest, opts ...grpc.CallOption) (*SessionStartReply, error)
	SessionAckForInit(ctx context.Context, in *SessionAckForInitRequest, opts ...grpc.CallOption) (*SessionAckForInitReply, error)
	SessionRequireTransact(ctx context.Context, in *SessionRequireTransactRequest, opts ...grpc.CallOption) (*SessionRequireTransactReply, error)
	SessionRequireRawTransact(ctx context.Context, in *SessionRequireRawTransactRequest, opts ...grpc.CallOption) (*SessionRequireRawTransactReply, error)
	AttestationReceive(ctx context.Context, in *AttestationReceiveRequest, opts ...grpc.CallOption) (*AttestationReceiveReply, error)
	MerkleProofReceive(ctx context.Context, in *MerkleProofReceiveRequest, opts ...grpc.CallOption) (*MerkleProofReceiveReply, error)
	ShrotenMerkleProofReceive(ctx context.Context, in *ShortenMerkleProofReceiveRequest, opts ...grpc.CallOption) (*ShortenMerkleProofReceiveReply, error)
	InformAttestation(ctx context.Context, in *AttestationReceiveRequest, opts ...grpc.CallOption) (*AttestationReceiveReply, error)
	InformMerkleProof(ctx context.Context, in *MerkleProofReceiveRequest, opts ...grpc.CallOption) (*MerkleProofReceiveReply, error)
	InformShortenMerkleProof(ctx context.Context, in *ShortenMerkleProofReceiveRequest, opts ...grpc.CallOption) (*ShortenMerkleProofReceiveReply, error)
}

type vESClient struct {
	cc *grpc.ClientConn
}

func NewVESClient(cc *grpc.ClientConn) VESClient {
	return &vESClient{cc}
}

func (c *vESClient) UserRegister(ctx context.Context, in *UserRegisterRequest, opts ...grpc.CallOption) (*UserRegisterReply, error) {
	out := new(UserRegisterReply)
	err := c.cc.Invoke(ctx, "/uiprpc.VES/UserRegister", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vESClient) SessionStart(ctx context.Context, in *SessionStartRequest, opts ...grpc.CallOption) (*SessionStartReply, error) {
	out := new(SessionStartReply)
	err := c.cc.Invoke(ctx, "/uiprpc.VES/SessionStart", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vESClient) SessionAckForInit(ctx context.Context, in *SessionAckForInitRequest, opts ...grpc.CallOption) (*SessionAckForInitReply, error) {
	out := new(SessionAckForInitReply)
	err := c.cc.Invoke(ctx, "/uiprpc.VES/SessionAckForInit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vESClient) SessionRequireTransact(ctx context.Context, in *SessionRequireTransactRequest, opts ...grpc.CallOption) (*SessionRequireTransactReply, error) {
	out := new(SessionRequireTransactReply)
	err := c.cc.Invoke(ctx, "/uiprpc.VES/SessionRequireTransact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vESClient) SessionRequireRawTransact(ctx context.Context, in *SessionRequireRawTransactRequest, opts ...grpc.CallOption) (*SessionRequireRawTransactReply, error) {
	out := new(SessionRequireRawTransactReply)
	err := c.cc.Invoke(ctx, "/uiprpc.VES/SessionRequireRawTransact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vESClient) AttestationReceive(ctx context.Context, in *AttestationReceiveRequest, opts ...grpc.CallOption) (*AttestationReceiveReply, error) {
	out := new(AttestationReceiveReply)
	err := c.cc.Invoke(ctx, "/uiprpc.VES/AttestationReceive", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vESClient) MerkleProofReceive(ctx context.Context, in *MerkleProofReceiveRequest, opts ...grpc.CallOption) (*MerkleProofReceiveReply, error) {
	out := new(MerkleProofReceiveReply)
	err := c.cc.Invoke(ctx, "/uiprpc.VES/MerkleProofReceive", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vESClient) ShrotenMerkleProofReceive(ctx context.Context, in *ShortenMerkleProofReceiveRequest, opts ...grpc.CallOption) (*ShortenMerkleProofReceiveReply, error) {
	out := new(ShortenMerkleProofReceiveReply)
	err := c.cc.Invoke(ctx, "/uiprpc.VES/ShrotenMerkleProofReceive", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vESClient) InformAttestation(ctx context.Context, in *AttestationReceiveRequest, opts ...grpc.CallOption) (*AttestationReceiveReply, error) {
	out := new(AttestationReceiveReply)
	err := c.cc.Invoke(ctx, "/uiprpc.VES/InformAttestation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vESClient) InformMerkleProof(ctx context.Context, in *MerkleProofReceiveRequest, opts ...grpc.CallOption) (*MerkleProofReceiveReply, error) {
	out := new(MerkleProofReceiveReply)
	err := c.cc.Invoke(ctx, "/uiprpc.VES/InformMerkleProof", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vESClient) InformShortenMerkleProof(ctx context.Context, in *ShortenMerkleProofReceiveRequest, opts ...grpc.CallOption) (*ShortenMerkleProofReceiveReply, error) {
	out := new(ShortenMerkleProofReceiveReply)
	err := c.cc.Invoke(ctx, "/uiprpc.VES/InformShortenMerkleProof", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VESServer is the server API for VES service.
type VESServer interface {
	UserRegister(context.Context, *UserRegisterRequest) (*UserRegisterReply, error)
	SessionStart(context.Context, *SessionStartRequest) (*SessionStartReply, error)
	SessionAckForInit(context.Context, *SessionAckForInitRequest) (*SessionAckForInitReply, error)
	SessionRequireTransact(context.Context, *SessionRequireTransactRequest) (*SessionRequireTransactReply, error)
	SessionRequireRawTransact(context.Context, *SessionRequireRawTransactRequest) (*SessionRequireRawTransactReply, error)
	AttestationReceive(context.Context, *AttestationReceiveRequest) (*AttestationReceiveReply, error)
	MerkleProofReceive(context.Context, *MerkleProofReceiveRequest) (*MerkleProofReceiveReply, error)
	ShrotenMerkleProofReceive(context.Context, *ShortenMerkleProofReceiveRequest) (*ShortenMerkleProofReceiveReply, error)
	InformAttestation(context.Context, *AttestationReceiveRequest) (*AttestationReceiveReply, error)
	InformMerkleProof(context.Context, *MerkleProofReceiveRequest) (*MerkleProofReceiveReply, error)
	InformShortenMerkleProof(context.Context, *ShortenMerkleProofReceiveRequest) (*ShortenMerkleProofReceiveReply, error)
}

func RegisterVESServer(s *grpc.Server, srv VESServer) {
	s.RegisterService(&_VES_serviceDesc, srv)
}

func _VES_UserRegister_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRegisterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VESServer).UserRegister(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uiprpc.VES/UserRegister",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VESServer).UserRegister(ctx, req.(*UserRegisterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VES_SessionStart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionStartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VESServer).SessionStart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uiprpc.VES/SessionStart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VESServer).SessionStart(ctx, req.(*SessionStartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VES_SessionAckForInit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionAckForInitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VESServer).SessionAckForInit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uiprpc.VES/SessionAckForInit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VESServer).SessionAckForInit(ctx, req.(*SessionAckForInitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VES_SessionRequireTransact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionRequireTransactRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VESServer).SessionRequireTransact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uiprpc.VES/SessionRequireTransact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VESServer).SessionRequireTransact(ctx, req.(*SessionRequireTransactRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VES_SessionRequireRawTransact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionRequireRawTransactRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VESServer).SessionRequireRawTransact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uiprpc.VES/SessionRequireRawTransact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VESServer).SessionRequireRawTransact(ctx, req.(*SessionRequireRawTransactRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VES_AttestationReceive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AttestationReceiveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VESServer).AttestationReceive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uiprpc.VES/AttestationReceive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VESServer).AttestationReceive(ctx, req.(*AttestationReceiveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VES_MerkleProofReceive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MerkleProofReceiveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VESServer).MerkleProofReceive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uiprpc.VES/MerkleProofReceive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VESServer).MerkleProofReceive(ctx, req.(*MerkleProofReceiveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VES_ShrotenMerkleProofReceive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShortenMerkleProofReceiveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VESServer).ShrotenMerkleProofReceive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uiprpc.VES/ShrotenMerkleProofReceive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VESServer).ShrotenMerkleProofReceive(ctx, req.(*ShortenMerkleProofReceiveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VES_InformAttestation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AttestationReceiveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VESServer).InformAttestation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uiprpc.VES/InformAttestation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VESServer).InformAttestation(ctx, req.(*AttestationReceiveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VES_InformMerkleProof_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MerkleProofReceiveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VESServer).InformMerkleProof(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uiprpc.VES/InformMerkleProof",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VESServer).InformMerkleProof(ctx, req.(*MerkleProofReceiveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VES_InformShortenMerkleProof_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShortenMerkleProofReceiveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VESServer).InformShortenMerkleProof(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uiprpc.VES/InformShortenMerkleProof",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VESServer).InformShortenMerkleProof(ctx, req.(*ShortenMerkleProofReceiveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _VES_serviceDesc = grpc.ServiceDesc{
	ServiceName: "uiprpc.VES",
	HandlerType: (*VESServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UserRegister",
			Handler:    _VES_UserRegister_Handler,
		},
		{
			MethodName: "SessionStart",
			Handler:    _VES_SessionStart_Handler,
		},
		{
			MethodName: "SessionAckForInit",
			Handler:    _VES_SessionAckForInit_Handler,
		},
		{
			MethodName: "SessionRequireTransact",
			Handler:    _VES_SessionRequireTransact_Handler,
		},
		{
			MethodName: "SessionRequireRawTransact",
			Handler:    _VES_SessionRequireRawTransact_Handler,
		},
		{
			MethodName: "AttestationReceive",
			Handler:    _VES_AttestationReceive_Handler,
		},
		{
			MethodName: "MerkleProofReceive",
			Handler:    _VES_MerkleProofReceive_Handler,
		},
		{
			MethodName: "ShrotenMerkleProofReceive",
			Handler:    _VES_ShrotenMerkleProofReceive_Handler,
		},
		{
			MethodName: "InformAttestation",
			Handler:    _VES_InformAttestation_Handler,
		},
		{
			MethodName: "InformMerkleProof",
			Handler:    _VES_InformMerkleProof_Handler,
		},
		{
			MethodName: "InformShortenMerkleProof",
			Handler:    _VES_InformShortenMerkleProof_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "uiprpc.proto",
}

// CenteredVESClient is the client API for CenteredVES service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CenteredVESClient interface {
	InternalRequestComing(ctx context.Context, in *InternalRequestComingRequest, opts ...grpc.CallOption) (*InternalRequestComingReply, error)
	InternalAttestationSending(ctx context.Context, in *InternalRequestComingRequest, opts ...grpc.CallOption) (*InternalRequestComingReply, error)
	InternalCloseSession(ctx context.Context, in *InternalCloseSessionRequest, opts ...grpc.CallOption) (*InternalCloseSessionReply, error)
}

type centeredVESClient struct {
	cc *grpc.ClientConn
}

func NewCenteredVESClient(cc *grpc.ClientConn) CenteredVESClient {
	return &centeredVESClient{cc}
}

func (c *centeredVESClient) InternalRequestComing(ctx context.Context, in *InternalRequestComingRequest, opts ...grpc.CallOption) (*InternalRequestComingReply, error) {
	out := new(InternalRequestComingReply)
	err := c.cc.Invoke(ctx, "/uiprpc.CenteredVES/InternalRequestComing", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *centeredVESClient) InternalAttestationSending(ctx context.Context, in *InternalRequestComingRequest, opts ...grpc.CallOption) (*InternalRequestComingReply, error) {
	out := new(InternalRequestComingReply)
	err := c.cc.Invoke(ctx, "/uiprpc.CenteredVES/InternalAttestationSending", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *centeredVESClient) InternalCloseSession(ctx context.Context, in *InternalCloseSessionRequest, opts ...grpc.CallOption) (*InternalCloseSessionReply, error) {
	out := new(InternalCloseSessionReply)
	err := c.cc.Invoke(ctx, "/uiprpc.CenteredVES/InternalCloseSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CenteredVESServer is the server API for CenteredVES service.
type CenteredVESServer interface {
	InternalRequestComing(context.Context, *InternalRequestComingRequest) (*InternalRequestComingReply, error)
	InternalAttestationSending(context.Context, *InternalRequestComingRequest) (*InternalRequestComingReply, error)
	InternalCloseSession(context.Context, *InternalCloseSessionRequest) (*InternalCloseSessionReply, error)
}

func RegisterCenteredVESServer(s *grpc.Server, srv CenteredVESServer) {
	s.RegisterService(&_CenteredVES_serviceDesc, srv)
}

func _CenteredVES_InternalRequestComing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InternalRequestComingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CenteredVESServer).InternalRequestComing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uiprpc.CenteredVES/InternalRequestComing",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CenteredVESServer).InternalRequestComing(ctx, req.(*InternalRequestComingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CenteredVES_InternalAttestationSending_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InternalRequestComingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CenteredVESServer).InternalAttestationSending(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uiprpc.CenteredVES/InternalAttestationSending",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CenteredVESServer).InternalAttestationSending(ctx, req.(*InternalRequestComingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CenteredVES_InternalCloseSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InternalCloseSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CenteredVESServer).InternalCloseSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uiprpc.CenteredVES/InternalCloseSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CenteredVESServer).InternalCloseSession(ctx, req.(*InternalCloseSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CenteredVES_serviceDesc = grpc.ServiceDesc{
	ServiceName: "uiprpc.CenteredVES",
	HandlerType: (*CenteredVESServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "InternalRequestComing",
			Handler:    _CenteredVES_InternalRequestComing_Handler,
		},
		{
			MethodName: "InternalAttestationSending",
			Handler:    _CenteredVES_InternalAttestationSending_Handler,
		},
		{
			MethodName: "InternalCloseSession",
			Handler:    _CenteredVES_InternalCloseSession_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "uiprpc.proto",
}
